#code generated by curser to send the msg to llm of azure (gpt) didnt run it yet 

import json
import requests
import openai
from flask import Flask, request

app = Flask(__name__)

# Replace with your own tokens
VERIFY_TOKEN = 'master'
PAGE_ACCESS_TOKEN = 'YOUR_PAGE_ACCESS_TOKEN'
PHONE_NUMBER_ID = 'YOUR_PHONE_NUMBER_ID'

@app.route('/webhook', methods=['GET', 'POST'])
def webhook():
    if request.method == 'GET':
        # Webhook verification
        mode = request.args.get('hub.mode')
        token = request.args.get('hub.verify_token')
        challenge = request.args.get('hub.challenge')

        if mode == 'subscribe' and token == VERIFY_TOKEN:
            print("Webhook verified!")
            return challenge, 200
        else:
            return "Verification failed", 403

    elif request.method == 'POST':
        data = request.get_json()
        print("Received POST data:", json.dumps(data, indent=4))

        if data.get('object') == 'whatsapp_business_account':
            for entry in data.get('entry', []):
                for change in entry.get('changes', []):
                    value = change.get('value', {})
                    messages = value.get('messages', [])
                    for message in messages:
                        sender_id = message['from']
                        if 'text' in message:
                            message_text = message['text']['body']
                            print(f"Received message: {message_text}")
                            
                            # Process message through Azure OpenAI and send response
                            send_message(sender_id, message_text)

        return "EVENT_RECEIVED", 200

def send_message(recipient_id, message_text):
    url = f"https://graph.facebook.com/v12.0/{PHONE_NUMBER_ID}/messages"
    
    headers = {
        "Content-Type": "application/json"
    }

    # Azure OpenAI Configuration
    azure_endpoint = "YOUR_AZURE_ENDPOINT"
    azure_key = "YOUR_AZURE_KEY"
    deployment_name = "YOUR_DEPLOYMENT_NAME"

    openai.api_type = "azure"
    openai.api_base = azure_endpoint
    openai.api_version = "2023-05-15"
    openai.api_key = azure_key

    try:
        # Get response from Azure OpenAI
        response = openai.ChatCompletion.create(
            engine=deployment_name,
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": message_text}
            ],
            temperature=0.7,
            max_tokens=150
        )
        
        # Extract AI response
        ai_response = response.choices[0].message['content'].strip()
        
        # Prepare WhatsApp message payload
        payload = {
            "messaging_product": "whatsapp",
            "to": recipient_id,
            "type": "text",
            "text": {
                "body": ai_response
            }
        }

        params = {
            "access_token": PAGE_ACCESS_TOKEN
        }

        # Send message back to WhatsApp
        response = requests.post(url, headers=headers, params=params, json=payload)
        print("Message sent:", response.status_code, response.text)

    except Exception as e:
        print(f"Error processing message: {str(e)}")
        # Send error message back to user
        error_payload = {
            "messaging_product": "whatsapp",
            "to": recipient_id,
            "type": "text",
            "text": {
                "body": "Sorry, I couldn't process your message at this time."
            }
        }
        requests.post(url, headers=headers, params=params, json=error_payload)

if __name__ == "__main__":
    app.run(debug=True)
